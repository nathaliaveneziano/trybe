// Expressão $subtract

/*
Com a expressão subtract , podemos subtrair dois valores numéricos para retornar a diferença entre eles, ou duas datas para retornar a diferença entre elas em milissegundos. O segundo argumento sempre será subtraído do primeiro .
*/

use("conteudo_trybe");
db.sales3.insertMany([
  {
    _id: 1,
    item: "abc",
    price: 10,
    fee: 2,
    discount: 5,
    date: ISODate("2014-03-01T08:00:00Z")
  },
  {
    _id: 2,
    item: "jkl",
    price: 20,
    fee: 1,
    discount: 2,
    date: ISODate("2014-03-01T09:00:00Z")
  }
]);

// Utilizando $add para calcular o total e o $subtract para aplicar um desconto no subtotal:
use("conteudo_trybe");
db.sales3.aggregate([
  {
    $project: {
      item: 1,
      total: {
        $subtract: [
          { $add: ["$price", "$fee"] },
          "$discount"
        ]
      }
    }
  }
]);

// A expressão $subtract para subtrair o valor do campo date da data corrente, utilizando a variável de sistema NOW (disponível a partir da versão 4.2 do MongoDB )
use("conteudo_trybe");
db.sales3.aggregate([
  {
    $project: {
      item: 1,
      dateDifference: {
        $subtract: ["$$NOW", "$date"]
      }
    }
  }
]);

// Alternativamente, você pode utilizar a função Date() para obter a data corrente:
use("conteudo_trybe");
db.sales3.aggregate([
  {
    $project: {
      item: 1,
      dateDifference: {
        $subtract: [new Date(), "$date"]
      }
    }
  }
]);

// milissegundos como argumento da subtração
use("conteudo_trybe");
db.sales3.aggregate([
  {
    $project: {
      item: 1,
      dateDifference: {
        $subtract: ["$date", 5 * 60 * 1000]
      }
    }
  }
]);


// Exercício de fixação


/*
Exercício 1 - Calcule qual o lucro total de cada produto, considerando o preço de compra, os impostos e seu valor de venda.
*/
use("storage");
db.products.aggregate([
  { $project: { name: 1, totalPrice: { 
    $subtract: ["$sale_price", { $add: ["$purchase_price", "$taxes"] }]}
  } }
]);
