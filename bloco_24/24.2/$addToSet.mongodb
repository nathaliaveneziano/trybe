// Operador $addToSet

/*
O operador $addToSet é utilizado quando você precisa garantir que os valores de um array não sejam duplicados. Ou seja, ele garante que apenas valores únicos estejam presentes no array , tratando o array como se fosse um conjunto (uma vez que conjuntos, na matemática, não podem conter elementos duplicados).

Você precisa ter em mente três aspectos sobre o $addToSet :
  - Se você utilizá-lo em um campo que não existe no documento alterado, ele criará um campo do tipo array com o valor especificado na operação;
  - Se você utilizá-lo em um campo já existente no documento, mas esse campo não for um array , a operação não funcionará;
  - Se o valor passado for um documento, o MongoDB o considerará como duplicado se um documento existente no array for exatamente igual ao documento a ser adicionado, ou seja, possui os mesmos campos com os mesmos valores, e esses campos estão na mesma ordem.
*/

{
  _id: 1,
  item: "polarizing_filter",
  tags: ["electronics", "camera"],
}


// Adicionando ao array

use('conteudo_trybe');
db.inventory.updateOne(
  { _id: 1 },
  { $addToSet: { tags: "accessories" } },
);

// Resultado:
// {
//   _id: 1,
//   item: "polarizing_filter",
//   tags: [
//     "electronics",
//     "camera",
//     "accessories",
//   ],
// }


// Se o valor existir

use('conteudo_trybe');
db.inventory.updateOne(
  { _id: 1 },
  { $addToSet: { tags: "camera"  } },
);

// Resultado
// { "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 0 }


// Com o modificador $each

{ _id: 2, item: "cable", tags: ["electronics", "supplies"] }

use('conteudo_trybe');
db.inventory.updateOne(
  { _id: 2 },
  {
    $addToSet: {
      tags: {
        $each: ["camera", "electronics", "accessories"],
      },
    },
  },
);

// // Resultado
// {
//   _id: 2,
//   item: "cable",
//   tags: ["electronics", "supplies", "camera", "accessories"],
// }
