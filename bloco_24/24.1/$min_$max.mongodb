// Operadores $min e $max

/*
$min : altera o valor do campo para o valor especificado se esse valor especificado é menor do que o atual valor do campo;
*/
// [
//   { _id: 1, campo: 25 },
//   { _id: 2, campo: 50 },
//   { _id: 3, campo: 100 }
// ]


db.collection.updateMany({}, { $max: { campo: 75 } });
// Atualizando todos os valores do atributo "campo"
// para 75 caso sejam menores

db.collection.find();

// Resultado:
// [
//   { _id: 1, campo: 75 }, // valor anterior: 25
//   { _id: 2, campo: 75 }, // valor anterior: 50
//   { _id: 3, campo: 100 }, // não encontrou no escopo
// ]


/*
$max : faz o mesmo, porém altera o valor do campo se o valor especificado é maior do que o atual valor do campo.
*/
db.collection.updateMany({}, { $min: { campo: 42 } });
// Atualizando todos os valores do atributo "campo"
// para 42 caso sejam maiores

db.collection.find();

// Resultado:[
  { _id: 1, campo: 42 }, // valor anterior: 75
  { _id: 2, campo: 42 }, // valor anterior: 75
  { _id: 3, campo: 42 }, // valor anterior: 100
]


// Exemplos
use('conteudo_trybe');
db.scores.insertOne(
  { _id: 1, highScore: 800, lowScore: 200 }
);

use('conteudo_trybe');
db.scores.find();

// Exemplo 1: Comparando números
use('conteudo_trybe');
db.scores.update({ _id: 1 }, { $min: { lowScore: 150 } });

// Resultado:
// { _id: 1, highScore: 800, lowScore: 150 }

use('conteudo_trybe');
db.scores.update({ _id: 1 }, { $min: { lowScore: 250 } })

// Resultado:
// Nada será alterado, pois o valor é menor que 250

use('conteudo_trybe');
db.scores.updateMany({ _id: 1 }, { $max: { highScore: 950 } });

// Resultado:
// { _id: 1, highScore: 950, lowScore: 150 }

use('conteudo_trybe');
db.scores.update({ _id: 1 }, { $max: { highScore: 870 } });

// Resultado:
// Nada será alterado, pois o valor é maior que 870


// Exemplo 2: Comparando datas
use('conteudo_trybe');
db.tags.insertOne(
  {
    _id: 1,
    desc: "crafts",
    dateEntered: ISODate("2019-10-01T05:00:00Z"),
    dateExpired: ISODate("2019-10-01T16:38:16Z")
  }
);

use('conteudo_trybe');
db.tags.find();

use('conteudo_trybe');
db.tags.update(
  { _id: 1 },
  {
    $min: { dateEntered: new Date("2019-09-25") },
    $max: { dateExpired: new Date("2019-10-02") }
  }
);
